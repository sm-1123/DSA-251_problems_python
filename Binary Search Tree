P1:Search In BST[TC:O(H),SC:O(H)]
def searchInBST(root, x):
    # Write your code here.
    if root is None:

        return False

    elif root.data == x:

        return True    

    elif root.data < x:

        return searchInBST(root.right, x)

    return searchInBST(root.left, x)       
P2: LCA of Two Nodes In A BST[TC:O(H),SC:(H)-RECURSION STACK SPACE]
def LCAinaBST(root, P, Q):

    # Write your code here
    if root == None:

        return None

    curr = root.data    

    if curr < P.data and curr < Q.data:

        return LCAinaBST(root.right, P, Q)

    if curr > P.data and curr > Q.data:

        return LCAinaBST(root.left, P, Q)

    return root            
    # P and Q are the given nodes
    # Return LCA node
    pass
    

