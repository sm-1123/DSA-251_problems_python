---------------------------------date:04/06/2024-------------------------------------------------
P1:Count Ways To Reach The N-th Stairs[TC:O(N),SC:O(1)]
def countDistinctWays(nStairs: int) -> int:
    #  Write your code here.
    mod = 1e9 + 7
        
    prev2 = 1

    prev = 1

    for i in range(2, nStairs+1):

        curr_i = int((prev2 + prev)%mod)

        prev2 = prev

        prev = curr_i

    return prev

P2:House Robber[TC:O(N),SC:O(1)]
def maxMoneyLooted(houses, n) :
    #Your code goes here
    prev = houses[0]

    prev2 = 0

    for i in range(1, n):

        take = houses[i]

        if i>1:

            take += prev2

        notTake = 0 + prev

        curr_i = max(take, notTake)

        prev2 = prev

        prev = curr_i

    return prev 
-----------------------------date:05/06/2024---------------------------------------
P3: Rod cutting problem[TRY AGAIN]
def cutRod(price, n):

    curr = [0] * (n + 1)

    for i in range(1, n+1):

        curr[i] = i * price[0]

        for i in range(1, n):

            for j in range(n+1):

                if i+1 <= j:

                    curr[j] = max(curr[j], price[i]+curr[j-(i+1)])

    return curr[n]   
