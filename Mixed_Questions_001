P1: Check Permutation
def areAnagram(str1, str2):
    # Write your code here.

    cnt1 = {}

    cnt2 = {}


    if len(str1) != len(str2):
        return 0

    for char in str1:

        cnt1[char] = cnt1.get(char,0) + 1

    for char in str2:

        cnt2[char] = cnt2.get(char,0) + 1

    if cnt1 == cnt2:

        return 1

    return 0      
P2: Intersection Of Two Sorted Arrays
def findArrayIntersection(arr: list, n: int, brr: list, m: int):
    # Write your code here
    i = 0

    j = 0

    result = []

    while i<len(arr) and j<len(brr):

        if arr[i] == brr[j]:

            result.append(arr[i])

            i += 1

            j += 1

        elif arr[i] < brr[j]:

            i += 1

        else:

            j += 1

    if result != 0:

        return result

    else:

        return -1    



       
    # Return a list containing all the common elements in arr and brr.
    pass
P4:Counting Sort
def sort(n: int, arr: List[int]) -> List[int]:
    # writw your code here
    max_val = max(arr)

    min_val = min(arr)

    cnt_arr = [0] * (max_val-min_val+1)

    for i in range(n):

        cnt_arr[arr[i]-min_val] += 1


    for i in range(1, len(cnt_arr)):

        cnt_arr[i] += cnt_arr[i - 1]

    output_arr = [0]*n    

    for i in range(len(arr) - 1, -1, -1):

        output_arr[cnt_arr[arr[i]-min_val] - 1] = arr[i]

        cnt_arr[arr[i]-min_val] -= 1

    return output_arr        


    pass
P5:Rotate matrix to the right
def rotateMatRight(mat, n, m, k):
	# Write your code here.
	temp = [0]*m
    
	res = []

	k = k%m

	for i in range(0,n):

		for t in range(0, m-k):

			temp[t] = mat[i][t]

		for j in range(m-k,m):

			mat[i][j-m+k] = mat[i][j]

		for j in  range(k,m):

			mat[i][j] = temp[j-k]

		for j in range(m):

			res.append(mat[i][j])

        
	return res

	pass


