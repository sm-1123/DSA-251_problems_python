------------------date:30/05/2024---------------------------------------------------------
P1:Maximum in Subarrays of length K[TC:O(N - K),SC:O(K)]
def printSubarrayMax(arr, n, k) :
	# write your code here
    Q = deque()

    for i in range(k):

        while Q and arr[i] >= arr[Q[-1]]:

            Q.pop()

        Q.append(i)

    for i in range(k, n):

        if Q:

            print(arr[Q[0]], end=" ")

        while Q and Q[0] <= i - k:

            Q.popleft()

        while Q and arr[i] >= arr[Q[-1]]:

            Q.pop()

        Q.append(i) 

    if Q:

        print(arr[Q[0]])     
------------------------date:31/05/2024-------------------------------------------------------
P2:Sliding Maximum[TC:O(N) + O(N) == O(N), SC:O(K)]
from collections import deque

def maxSlidingWindow(arr, n, k):

    Q = deque()

    ans = []

    for i in range(n):

        if Q and Q[0] == i - k:

            Q.popleft()

        while Q and arr[Q[-1]] <= arr[i]:

            Q.pop()

        Q.append(i)

        if i >= k-1:

            ans.append(arr[Q[0]])

    return ans
            
    # Write your code here.
    pass
