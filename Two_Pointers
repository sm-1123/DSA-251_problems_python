#P1:PAIR SUM
def pairSum(arr, n, target):
    # Write your code here.
    n = len(arr)
    sum = 0
    cnt = 0
    i = 0
    j = n-1

    while(i<j):
        sum = arr[i]+arr[j]
        if sum == target:
            cnt += 1
            i += 1
            j -= 1
        elif sum<target:
            i += 1
        else:
            j -= 1

    if cnt == 0:
        return -1
    else:
        return cnt
#P2:Move All Negative Numbers To Beginning And Positive To End
def separateNegativeAndPositive(nums):
    # write your code here
    i = 0
    j = len(nums)-1
    while i<j:

        while nums[i]<0 and i<j:
            i += 1

        while nums[j]>0 and i<j:
            j -= 1

        if i<j:
            nums[i],nums[j] = nums[j],nums[i]

    return nums  
#P3:Container With Most Water
def maxArea(height):
    
    # Write your code here.
    i = 0
    j = len(height)-1
    diff=0
    area=0
    max_area=0
    while(i<j):
        diff = j-i
        area = diff*min(height[i],height[j])
        max_area=max(area,max_area)
        if height[i]<height[j]:
            i += 1
        else:
            j -= 1

    return max_area  
#P4:Is SubSequence
def isSubSequence(str1, str2):

    # Write your code here.
    i = 0
    j = 0
    while i<len(str1) and j<len(str2):
        if str1[i] == str2[j]:
            i += 1
            j += 1
        else:
            j += 1

    if i == len(str1):
        return True
    else:
        return False 
#P5:Maximum Subarray Sum
import sys

from sys import stdin,setrecursionlimit
setrecursionlimit(10**7)

def maxSubarraySum(arr, n) :

	# Your code here
    maxi = -sys.maxsize-1
    sum = 0

    for i in range(n):
        sum += arr[i]
        if sum<0:
            sum = 0
        if sum>maxi:
            maxi=sum
            maxi = max(maxi,sum)
        
    return maxi            



    # return the answer
	 
